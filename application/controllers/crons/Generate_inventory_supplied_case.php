<?php

/* Generated by Webdimensions  www.webdimensions.co.in */

class Generate_inventory_supplied_case extends CI_controller {

    function __construct()
    {
        parent::__construct();
        if (!$this->input->is_cli_request())
        {
            show_404();
        }
        $this->load->library( 'amazon' );
        $this->load->library('AmazonInventoryConfig');
        $this->load->model( "user_model" );
        $this->load->model( "reimbursement_model" );
        $this->load->model( "inventory_salvager_model" );
        $this->load->model( "Inventory_shipment_model" );
        $this->load->model( "Case_log_model" );
        $this->load->library( 'rat' );
        $this->logging = new Rat();
    }

    public function index() {
        $cronName = "Generate Inventory Supplied Case";
        $content = date( "d-m-Y H:i:s" ) . " " . "Generate Inventory Supplied case cron Start";
        $this->logging->write_log( $cronName, $content, 1, 0 );
        $allUsers = $this->user_model->getAllActiveUsers();
        foreach ( $allUsers as $user )
        {
            $todayDate = date('Y-m');
            $startDate = date('Y-m-d', strtotime($todayDate . ' - 18 month'));
            $inventorySupplied = $this->Inventory_shipment_model->getinventorysuppliedbyaccoundid_status( $user['ID_ACCOUNT'] , $startDate);
            if ( $inventorySupplied )
            {
                foreach ( $inventorySupplied as $inventoryArr )
                {
                    $qtyDiffInventory = $inventoryArr['qty_shipped'] - $inventoryArr['qty_received'];
                    if ( $qtyDiffInventory > 0 )
                    {
                        $queryParam                  = array(
                            'ID_ACCOUNT' => $user['ID_ACCOUNT'],
                            'reason'     => 'Lost_Inbound',
                            'fnsku'      => $inventoryArr['fulfillment_network_sku'],
                            'status'     => '0'
                        );
                        $reimbursementInventoryCheck = $this->Inventory_shipment_model->getreimbursecheckInventory( $queryParam );
                        if (empty( $reimbursementInventoryCheck ) ) {
                            $data = array( 'status' => '1', 'case_type' => 'ASID' );
                            $this->Inventory_shipment_model->updateinventorysuppliedbyid( $inventoryArr['id'], $data );
                            $caseArr = array(
                                'inventoryItemId' => $inventoryArr['id'],
                                'accountId'       => $user['ID_ACCOUNT'],
                                'date'            => date( "Y-m-d H:i:s" ),
                            );
                            echo "<pre />";
                            print_r( $caseArr );
                            $inserid[]   = $this->Inventory_shipment_model->generatecaseinventorysupplied( $caseArr );
                            $t           = time();
                            $casetype    = 'ASID';
                            $log_data    = array(
                                'ID_ACCOUNT'         => $user['ID_ACCOUNT'],
                                'case_type'          => $casetype,
                                'inventory_order_id' => $inventoryArr['id'],
                                'timestamp'          => $t
                            );
                            $arrCaseID[] = $this->Case_log_model->addcaselog( $log_data );
                        }
                        else
                        {
                            $data = array( 'status' => '1');
                            $this->Inventory_shipment_model->updateinventorysuppliedbyid( $inventoryArr['id'], $data );
                            $this->Inventory_shipment_model->updatereimbursementdatabyID($reimbursementInventoryCheck['id'], $data);
                        }
                    }
                    else
                    {
                        $data = array( 'status' => '1' );
                        $this->Inventory_shipment_model->updateinventorysuppliedbyid( $inventoryArr['id'], $data );
                    }
                }
                if ( ! empty( $arrCaseID ) ) {
                    $strCases = implode( ",", $arrCaseID );
                    $content  = "Generated Inventory Supplied Cases :" . $strCases;
                    $this->logging->write_log( $cronName, $content, 2, $user['ID_ACCOUNT'] );
                }
            }
        }
        $content = date( "d-m-Y H:i:s" ) . " " . "Generate Inventory Supplied Case cron End";
        $this->logging->write_log( $cronName, $content, 3, 0 );
    }
}