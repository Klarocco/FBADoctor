<?php

/* Generated by Webdimensions  www.webdimensions.co.in */

class Generate_Inventory_case extends CI_controller
{

    function __construct()
    {
        parent::__construct();
        if (!$this->input->is_cli_request()) {
            show_404();
        }
        $this->load->library('amazon');
        $this->load->model("user_model");
        $this->load->model("reimbursement_model");
        $this->load->model("inventory_salvager_model");
        $this->load->model("Inventory_salvager_model_historical");
        $this->load->model("case_log_model");
        $this->load->library('rat');
        $this->logging = new Rat();
    }

    public function index()
    {
        $cronName = "Generate Inventory Case Daily";
        $content = date("d-m-Y H:i:s") . " " . "Generate Inventory case Daily cron Start";
        $this->logging->write_log($cronName, $content, 1, 0);
        $inventoryCaseRecord = array();
        $allUsers = $this->user_model->getAllActiveUsers();
        foreach ($allUsers as $user) {
            $reimburseDate         = date( 'Y-m-d' );
            $startDate = date('Y-m-d', strtotime($reimburseDate . ' - 18 months'));
            $endDate = date('Y-m-d', strtotime($reimburseDate . ' - 1 month'));
            $allInventoryDetails = $this->inventory_salvager_model->getallInventoryDetails($user['ID_ACCOUNT'], $startDate,$endDate);
                if ($allInventoryDetails) {
                    foreach ($allInventoryDetails as $index => $inventoryData) {
                        $reimbusementdetailbysku = $this->inventory_salvager_model->getReimbursementDetailsgroupbysku( $user['ID_ACCOUNT'], $startDate, $reimburseDate, $inventoryData['sku'] );
                        $allInventoryDetails     = $this->inventory_salvager_model->getallInventoryDetailsStartEndDate( $user['ID_ACCOUNT'], $startDate, $endDate, $inventoryData['sku'] );
                        $allReimbursementDetails = $this->inventory_salvager_model->getallReimbursementDetails( $user['ID_ACCOUNT'], $startDate, $reimburseDate, $inventoryData['sku'] );
                        $resultCount = 0;
                        $reimbursementCount = ($reimbusementdetailbysku['TotalreimbursementQty'] ? $reimbusementdetailbysku['TotalreimbursementQty'] : 0);

                        if (isset($reimbursementCount))
                        {
                            $resultCount = $inventoryData['TotalQty'] - $reimbursementCount;
                        }
                        if ($resultCount < 0)
                        {
                            $this->generateinventorycase($allInventoryDetails, $allReimbursementDetails, $reimbursementCount, $resultCount, $startDate, $reimburseDate);
                        } else {
                            $this->updateInventoryReimbursement($allInventoryDetails, $allReimbursementDetails, $resultCount);
                        }
                    }
                }
            }

        $content = date("d-m-Y H:i:s") . " " . "Generate Inventory Case Daily cron End";
        $this->logging->write_log($cronName, $content, 3, 0);
    }

    function generateinventorycase($allInventoryDetails, $allreimbursementDetails, $reimbursementCount, $resultCount, $startDate, $endDate)
    {
        $arrCaseID = array();
        echo "GenerateInventorycase";
        $cronName = "Generate Inventory Case";
        $resultCount = abs($resultCount);
        foreach ($allInventoryDetails as $index => $inventoryData) {
            if ($index < $reimbursementCount)
            {
                $data = array('status' => '1');
                $this->Inventory_salvager_model_historical->updateInventoryDetailsData($data, $inventoryData['transaction_item_id'], $inventoryData['ID_ACCOUNT']);
                if (isset($allreimbursementDetails[$index]))
                    $this->Inventory_salvager_model_historical->updateReimburseDetailsById($allreimbursementDetails[$index]['id']);
            }
            else
            {
                $caseDetail = array(
                    'accountId' => $inventoryData['ID_ACCOUNT'],
                    'inventoryItemId' => $inventoryData['transaction_item_id'],
                    'date' => date('Y-m-d H:i:s'),
                    'report_start_date' => $startDate,
                    'report_end_date' => $endDate
                );
                echo "<pre >";
                print_r($caseDetail);
                if ($inventoryData['reason'] == 'H' || $inventoryData['reason'] == '6' || $inventoryData['reason'] == 'E' || $inventoryData['reason'] == 'K' || $inventoryData['reason'] == 'U')
                    $casetype = 'UDW';
                else if ($inventoryData['reason'] == '5' || $inventoryData['reason'] == 'D')
                    $casetype = 'ULW';
                $t = time();
                $this->Inventory_salvager_model_historical->insertCaseId($caseDetail);
                $log_data = array('ID_ACCOUNT' => $inventoryData['ID_ACCOUNT'], 'case_type' => $casetype, 'inventory_order_id' => $inventoryData['transaction_item_id'], 'timestamp' => $t);
                $arrCaseID[] = $this->case_log_model->addcaselog($log_data);
                $data = array('status' => '1', 'case_type' => $casetype);
                $this->Inventory_salvager_model_historical->updateInventoryDetailsData($data, $inventoryData['transaction_item_id'], $inventoryData['ID_ACCOUNT']);
                if (isset($allreimbursementDetails[$index]))
                    $this->Inventory_salvager_model_historical->updateReimburseDetailsById($allreimbursementDetails[$index]['id']);
            }
            if (!empty($arrCaseID)) {
                $strCases = implode(",", $arrCaseID);
                $content = "Generated Inventory Cases :" . $strCases;
                $this->logging->write_log($cronName, $content, 2, $inventoryData['ID_ACCOUNT']);
            }
        }
    }

    function updateInventoryReimbursement($allInventoryDetails, $allreimbursementDetails, $inventoryCount)
    {
        echo "updateInventoryReimbursement";
        foreach ($allreimbursementDetails as $index => $reimbursementData) {
            $this->Inventory_salvager_model_historical->updateReimburseDetailsById($reimbursementData['id']);
            $data = array('status' => '1');
            $this->Inventory_salvager_model_historical->updateInventoryDetailsData($data, $allInventoryDetails[$index]['transaction_item_id'], $allInventoryDetails[$index]['ID_ACCOUNT']);
        }
    }

}

