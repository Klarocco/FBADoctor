<?php

/* Generated by Webdimensions  www.webdimensions.co.in */

class Generate_fnsku_change_case extends CI_controller
{

    function __construct()
    {
        parent::__construct();
        if (!$this->input->is_cli_request())
        {
            show_404();
        }
        $this->load->library('amazon');
        $this->load->model("user_model");
        $this->load->model("reimbursement_model");
        $this->load->model('Case_log_model');
        $this->load->library('rat');
        $this->logging = new Rat();
    }

    public function index()
    {
        $cronName = "Order FNSKU change Case";
        $content = date("d-m-Y H:i:s") . " " . "Order FNSKU change Case cron Start";
        $this->logging->write_log($cronName, $content, 1, 0);
        $allUsers = $this->user_model->getAllActiveUsers();
        foreach ($allUsers as $user)
        {
            $arrCaseID = array();
            $allRecordsFetched = $this->reimbursement_model->gethistorycronstatusbyaccountid($user['ID_ACCOUNT']);

            if(!empty($allRecordsFetched))
            {
                if($allRecordsFetched['CustomerShipmentStatus'] == 1 && $allRecordsFetched['OrderReturnStatus'] == 1 && $allRecordsFetched['FinanceRefundStatus'] == 1)
                {
                    $allpaymentDetails = $this->reimbursement_model->getPaymentDetails($user['ID_ACCOUNT']);

                    foreach ($allpaymentDetails as $key => $record)
                    {
                        $time = strtotime($record['date']);
                        $currentDate = date('Y-m-d H:i:s');
                        $CurrentDate45 = date('Y-m-d H:i:s', mktime(date("h", $time), date("i", $time), date("s", $time), date("m", $time), date("d", $time) + 50, date("Y", $time)));
                        if ($CurrentDate45 < $currentDate)
                        {
                            $customerReturnDetails = $this->reimbursement_model->getReturnOrderDetails($record['order_id'],$record['seller_sku'], $user['ID_ACCOUNT']);
                            if (!empty($customerReturnDetails))
                            {
                                $inventoryRecordDetails = $this->reimbursement_model->getInventoryDetails($customerReturnDetails['order_id'],$user['ID_ACCOUNT']);
                                if (!empty($inventoryRecordDetails))
                                {
                                        $inventoryArr = array();
                                        foreach($inventoryRecordDetails as $key => $inventory)
                                        {
                                            $inventoryArr[] = $inventory;
                                        }
                                        if(!in_array($customerReturnDetails['fnsku'], $inventoryArr))
                                        {
                                            $reimbursementReceived = $this->reimbursement_model->getReimbursementDetailsByOrderId($customerReturnDetails['order_id'], $user['ID_ACCOUNT'], $customerReturnDetails['fnsku']);
                                            if (empty($reimbursementReceived))
                                            {
                                                $t = time();
                                                $data = array('case_type' => 'RWF', 'status' => '1');
                                                $effectedRow = $this->reimbursement_model->updatePaymentwithCORtype($data, $record['id']);
                                                if ($record['amount'] < 0)
                                                {
                                                    $data = array('ID_ACCOUNT' => $record['ID_ACCOUNT'], 'order_id' => $record['order_id'], 'status' => '0', 'case_type' => 'RWF', 'date' => date('Y-m-d h:i:s'));
                                                    $insertId = $this->reimbursement_model->insertCaseId($data);
                                                    $log_data = array('ID_ACCOUNT' => $user['ID_ACCOUNT'], 'case_type' => 'RWF', 'inventory_order_id' => $record['order_id'], 'timestamp' => $t);
                                                }
                                                $arrCaseID[] = $this->Case_log_model->addcaselog($log_data);
                                            }
                                        }
                                }
                            }
                        }
                    }
                    if(!empty($arrCaseID))
                    {
                        $strCases = implode(",", $arrCaseID);
                        $content = "Generated Cases :" . $strCases;
                        $this->logging->write_log($cronName, $content, 2, $user['ID_ACCOUNT']);
                    }
                }
            }
        }
        $content = date("d-m-Y H:i:s") . " " . "Order FNSKU change Case cron End";
        $this->logging->write_log($cronName, $content, 3, 0);
    }
}
