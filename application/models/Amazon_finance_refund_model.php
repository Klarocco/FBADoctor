<?php

/*
 * Generated by Webdimensions
 * www.webdimensions.co.in
 */

class Amazon_finance_refund_model extends CI_Model
{

    function __construct()
    {
        parent::__construct();
    }

    /*
     * Get account by Account Id
     */

    function insert_finance_refund_orders($refundOrder)
    {
        $this->db->where('order_id', $refundOrder['order_id']);
        $this->db->where('charge_type', $refundOrder['charge_type']);
        $this->db->where('ID_ACCOUNT', $refundOrder['ID_ACCOUNT']);
        $checkOrder = $this->db->get('payment_details')->row_array();
        if(!isset($checkOrder['order_id']))
        {
            $this->db->insert('payment_details', $refundOrder);
            return $this->db->insert_id();
        }
    }

    /*
     * Get all accounts
     */

    function get_all_accounts($page, $col, $sort)
    {
        if ($col !== 0) {
            $this->db->order_by($col, $sort);
        } else {
            $this->db->order_by("ID_ACCOUNT", "DESC");
        }
        $this->db->where('mwssettingsdone', 1);
        $this->db->limit(10, $page);
        return $this->db->get('accounts')->result_array();
    }

    /*
     * function to add new account
     */

    function add_account($params)
    {
        $this->db->insert('accounts', $params);
        return $this->db->insert_id();
    }

    /*
     * function to update account
     */

    function update_account($ID_ACCOUNT, $params)
    {
        $this->db->where('ID_ACCOUNT', $ID_ACCOUNT);
        $this->db->update('accounts', $params);
    }

    /*
     * function to delete account
     */

    function delete_account($ID_ACCOUNT)
    {
        $this->db->delete('users', array('ID_ACCOUNT' => $ID_ACCOUNT));
        $this->db->delete('feedback_settings', array('ID_ACCOUNT' => $ID_ACCOUNT));
        $this->db->delete('accounts', array('ID_ACCOUNT' => $ID_ACCOUNT));
    }

    /*
     * To get toatl account
     */

    public function get_total_account_count()
    {
        $s = $this->db->select("COUNT(*) as num")->get("accounts");
        $r = $s->row();
        if (isset($r->num))
            return $r->num;
        return 0;
    }

    /*
     * get account data by company name
     */

    function search_by_account($search)
    {
        $this->db->limit(20);
        $this->db->like("company", $search);
        return $this->db->get('accounts')->result_array();
    }

    /*
     * get account data by city
     */

    function search_by_city($search)
    {
        $this->db->limit(20);
        $this->db->like("city", $search);
        return $this->db->get('accounts')->result_array();
    }

    /*
     * Update subscription notification or status
     */

    function update_subscription_notification_orstatus($id, $status)
    {

        $this->db->query("update `accounts` JOIN `payment_method` ON `accounts`.`ID_ACCOUNT` = `payment_method`.`ID_ACCOUNT` set subscription_status='$status ' WHERE `payment_method`.`customerid` = '$id'");
    }


    /*
     * get account data by subscription id
     */

    function get_account_data_customerid_id($cutmoerid)
    {

        $this->db->select("users.*,accounts.*,users.id as userid,payment_method.cardnumber,payment_method.lastfour");
        $this->db->join("payment_method", "payment_method.ID_ACCOUNT = accounts.ID_ACCOUNT");
        $this->db->join("users", "users.ID_ACCOUNT = accounts.ID_ACCOUNT");
        $this->db->where("payment_method.customerid", $cutmoerid);
        return $this->db->get("accounts")->row_array();
    }

    public function getPaymentDetailbyOrderIDandAccountID($accoundID, $orderID, $sku, $charge_type){
        $this->db->where('ID_ACCOUNT', $accoundID);
        $this->db->where('order_id', $orderID);
        $this->db->where('charge_type', $charge_type);
        $this->db->where('seller_sku', $sku);
        return $this->db->get('payment_details')->row_array();
    }

    public function update_finance_refund_orders($data, $id){
        $this->db->where('id', $id);
        return $this->db->update('payment_details', $data);
    }

}
